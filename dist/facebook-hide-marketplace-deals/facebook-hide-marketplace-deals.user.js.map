{
  "version": 3,
  "sources": ["../../src/main/facebook-hide-marketplace-deals/facebook-hide-marketplace-deals.user.ts"],
  "sourcesContent": ["// Options for the observer (which mutations to observe)\nconst config: MutationObserverInit = {\n  childList: true,\n  attributes: true,\n  subtree: true,\n};\n\nconst removeTracking = (node: Node): void => {\n  if (node.nodeType === Node.ELEMENT_NODE) {\n    const dealsLink = (node as HTMLElement).querySelector<HTMLAnchorElement>(\"a[href*='tracking']\");\n    if (dealsLink) {\n      dealsLink.parentElement?.remove();\n    }\n  }\n};\n\n// Callback function to execute when mutations are observed\nconst callback: MutationCallback = mutationsList => {\n  for (const mutation of mutationsList) {\n    if (mutation.type === 'childList' && mutation.addedNodes.length) {\n      mutation.addedNodes.forEach(node => removeTracking(node));\n    }\n    if (mutation.type === 'attributes' && mutation.attributeName === 'href' && mutation.target.nodeType === Node.ELEMENT_NODE) {\n      const link = mutation.target as HTMLAnchorElement;\n      if (link.href.includes('tracking')) {\n        link.parentElement?.remove();\n      }\n    }\n  }\n};\n\n// Create an observer instance linked to the callback function and observe\nnew MutationObserver(callback).observe(document, config);\n"],
  "mappings": ";;;;AACA,MAAM,SAA+B;AAAA,IACnC,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,EACX;AAEA,MAAM,iBAAiB,CAAC,SAAqB;AAP7C;AAQE,QAAI,KAAK,aAAa,KAAK,cAAc;AACvC,YAAM,YAAa,KAAqB,cAAiC,qBAAqB;AAC9F,UAAI,WAAW;AACb,wBAAU,kBAAV,mBAAyB;AAAA,MAC3B;AAAA,IACF;AAAA,EACF;AAGA,MAAM,WAA6B,mBAAiB;AAjBpD;AAkBE,eAAW,YAAY,eAAe;AACpC,UAAI,SAAS,SAAS,eAAe,SAAS,WAAW,QAAQ;AAC/D,iBAAS,WAAW,QAAQ,UAAQ,eAAe,IAAI,CAAC;AAAA,MAC1D;AACA,UAAI,SAAS,SAAS,gBAAgB,SAAS,kBAAkB,UAAU,SAAS,OAAO,aAAa,KAAK,cAAc;AACzH,cAAM,OAAO,SAAS;AACtB,YAAI,KAAK,KAAK,SAAS,UAAU,GAAG;AAClC,qBAAK,kBAAL,mBAAoB;AAAA,QACtB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,MAAI,iBAAiB,QAAQ,EAAE,QAAQ,UAAU,MAAM;",
  "names": []
}
