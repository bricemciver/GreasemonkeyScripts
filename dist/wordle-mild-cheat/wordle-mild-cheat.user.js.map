{
  "version": 3,
  "sources": ["../../src/main/wordle-mild-cheat/wordle-mild-cheat.user.ts"],
  "sourcesContent": ["enum State {\n  correct,\n  diff,\n  none,\n}\n\ntype ProcessedCell = {\n  letter: string;\n  position: number;\n  status: State;\n};\n\nconst fullWordList: string[] = [];\n\n/**\n * Set an item into storage\n * @param key key to set\n * @param value value to set\n */\nconst setItem = (key: string, value: any) => {\n  window.sessionStorage.setItem(key, JSON.stringify(value));\n};\n\n/**\n * Get an item from session storage\n * @param key key to get\n * @param defaultVal value to return if key doesnt exist\n */\nconst getItem = (key: string, defaultVal: any) => {\n  const val = window.sessionStorage.getItem(key);\n  if (!val || val === 'undefined') return defaultVal;\n  try {\n    return JSON.parse(val);\n  } catch (e) {\n    return val;\n  }\n};\n\nconst callback: MutationCallback = (mutationList, mutationObserver) => {\n  for (const mutation of mutationList) {\n    if (\n      mutation.addedNodes.length > 0 &&\n      mutation.addedNodes[0].nodeType === Node.ELEMENT_NODE &&\n      mutation.addedNodes[0].nodeName === 'SCRIPT'\n    ) {\n      const element = mutation.addedNodes[0] as HTMLScriptElement;\n      if (element.src.startsWith('https://www.nytimes.com/games-assets/v2/wordle.')) {\n        // Get the script\n        GM.xmlHttpRequest({\n          method: 'GET',\n          url: element.src,\n          onload(response) {\n            // find a known valid word\n            const sonic = response.responseText.indexOf('sonic');\n            // find the beginning of array\n            const begArray = response.responseText.lastIndexOf('[', sonic);\n            // find the end of array\n            const endArray = response.responseText.indexOf(']', sonic);\n            // Get the word list from script\n            const wordListStr = response.responseText.substring(begArray, endArray + 1);\n            // Convert to an array object\n            const tempArray = JSON.parse(wordListStr) as string[];\n            fullWordList.push(...tempArray);\n            setItem('wordList', fullWordList);\n          },\n        });\n        mutationObserver.disconnect();\n        break;\n      }\n    }\n  }\n};\n\nconst strToState: Record<string, State> = {\n  absent: State.none,\n  'present in another position': State.diff,\n  correct: State.correct,\n};\n\nconst createWordlistDialog = (): HTMLDialogElement => {\n  const wordlist = document.createElement('dialog');\n  wordlist.classList.add('dialog');\n  wordlist.id = 'dialog';\n  const header = document.createElement('h2');\n  header.textContent = 'Word List';\n  const list = document.createElement('ul');\n  list.id = 'wordList';\n  wordlist.appendChild(header);\n  wordlist.appendChild(list);\n  return wordlist;\n};\n\nconst showWordlist = (curWords: string[]): void => {\n  let wordList = document.getElementById('wordList');\n  if (!wordList) {\n    // load new styles\n    const head = document.getElementsByTagName('head')[0];\n    const style = document.createElement('style');\n    head.appendChild(style);\n    style.setAttribute('type', 'text/css');\n    style.sheet?.insertRule(`.dialog li {\n        display: block;\n        padding: 2px 0px;\n      }`);\n    style.sheet?.insertRule(`.dialog ul {\n        list-style: none;\n        margin: 4px 0px;\n        position: relative;\n        padding: 0px;\n      }`);\n    style.sheet?.insertRule(`.dialog h2 {\n        font-size: 0.6875rem;\n        line-height: 1.5;\n        letter-spacing: 0.08rem;\n        font-family: \"IBM Plex Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n        font-weight: 700;\n        display: flex;\n        align-items: center;\n        border-radius: 5px;\n        outline: 0px;\n        width: 100%;\n        justify-content: flex-start;\n        transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n        text-decoration: none;\n        color: rgb(111, 126, 140);\n        margin-top: 8px;\n        text-transform: uppercase;\n      }`);\n    style.sheet?.insertRule(`.dialog {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        width: 300px;\n        padding: 20px;\n        background-color: #f2f2f2;\n        border: 1px solid #ccc;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n        font-family: Arial, sans-serif;\n        color: #333;\n        margin: 0 auto;\n      }`);\n\n    // create wordlist div\n    const helpDiv = createWordlistDialog();\n\n    // attach to body\n    document.body.appendChild(helpDiv);\n\n    wordList = document.getElementById('wordList');\n  }\n  if (wordList) {\n    wordList.innerHTML = '';\n    curWords.forEach(word => {\n      const listItem = document.createElement('li');\n      listItem.textContent = word;\n      wordList?.appendChild(listItem);\n    });\n  }\n  document.querySelector<HTMLDialogElement>('dialog#dialog')?.showModal();\n};\n\nconst hideWordlist = (): void => {\n  document.querySelector<HTMLDialogElement>('dialog#dialog')?.close();\n};\n\n/**\n * Examples of text found:\n * - 'A' (letter 1) is in a different spot\n * - 'S' (letter 1) is correct\n * - 'N' (letter 3) is incorrect\n */\nconst processCell = (element: HTMLDivElement): ProcessedCell | null => {\n  const label = element.ariaLabel;\n  if (label) {\n    // get letter, status, position from label\n    const [position, letter, status] = label.split(', ');\n    if (letter && letter !== 'empty') {\n      return {\n        letter,\n        position: parseInt(position.charAt(0), 10),\n        status: strToState[status],\n      };\n    }\n  }\n  return null;\n};\n\nconst extractGameBoard = () => {\n  const boardState: ProcessedCell[] = [];\n  const board = document.querySelector<HTMLDivElement>(\"div[class^='Board-module_board__']\");\n  if (board) {\n    const tiles = board.querySelectorAll<HTMLDivElement>(\"div[class^='Tile-module_tile__']\");\n    tiles.forEach(tile => {\n      const processedCell = processCell(tile);\n      if (processedCell !== null) {\n        boardState.push(processedCell);\n      }\n    });\n  }\n  return boardState;\n};\n\nconst sortProcessedCells = (cells: ProcessedCell[]): ProcessedCell[] => {\n  return cells.sort((a, b) => a.status - b.status);\n};\n\nconst processGameBoard = (boardState: ProcessedCell[]) => {\n  let tempWordList: string[] = [...fullWordList];\n\n  // sort boardState so all correct answers are handled first, then diff, then none\n  sortProcessedCells(boardState);\n\n  boardState.forEach(item => {\n    if (item.status === State.correct) {\n      // process all the correct answers first to shrink word list\n      tempWordList = tempWordList.filter(word => word.charAt(item.position - 1).toLowerCase() === item.letter.toLowerCase());\n    } else if (item.status === State.diff) {\n      // now eliminate words where 'diff' items appear in that spot\n      // and where 'diff' item doesn't appear at all\n      tempWordList = tempWordList.filter(\n        word =>\n          word.charAt(item.position - 1).toLowerCase() !== item.letter.toLowerCase() && word.indexOf(item.letter.toLowerCase()) !== -1,\n      );\n    } else if (\n      item.status === State.none &&\n      !boardState.some(\n        ({ letter, status }) => (status === State.correct || status === State.diff) && letter.toLowerCase() === item.letter.toLowerCase(),\n      )\n    ) {\n      // need to be careful here, only remove 'none' if it wasn't previously 'correct' or 'diff' (since it could be a second occurance)\n      tempWordList = tempWordList.filter(word => word.indexOf(item.letter.toLowerCase()) === -1);\n    }\n  });\n\n  return tempWordList;\n};\n\nconst findAllowedWords = () => {\n  fullWordList.push(...getItem('wordList', []));\n  if (fullWordList.length === 0) {\n    // create a new instance of `MutationObserver` named `observer`,\n    // passing it a callback function\n    const observer = new MutationObserver(callback);\n\n    // call `observe()` on that MutationObserver instance,\n    // passing it the element to observe, and the options object\n    observer.observe(document, { subtree: true, childList: true });\n  }\n};\n\nconst addListeners = () => {\n  document.addEventListener(\n    'keydown',\n    event => {\n      if (event.defaultPrevented) {\n        return; // Do nothing if the event was already processed\n      }\n\n      if (event.key === '?') {\n        event.preventDefault();\n        showWordlist(processGameBoard(extractGameBoard()));\n      }\n      if (event.key === 'Escape') {\n        event.preventDefault();\n        hideWordlist();\n      }\n    },\n    true,\n  );\n};\n\n// Retrieve (locally or from site) the word lists\nfindAllowedWords();\n\n// add listeners\naddListeners();\n"],
  "mappings": "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",
  "names": []
}
