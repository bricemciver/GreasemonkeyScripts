{
  "version": 3,
  "sources": ["../../src/main/wirecutter-anti-modal/wirecutter-anti-modal.user.ts"],
  "sourcesContent": ["namespace WirecutterAntiModal {\n  // keep track of actions so we can disable observer at some point\n  let modalRemoved = false;\n  let overflowFixed = false;\n\n  const config: MutationObserverInit = {\n    attributes: true,\n    childList: true,\n    subtree: true,\n  };\n\n  const elementToObserve = document.querySelector<HTMLBodyElement>('body');\n\n  const removePaywallModal = (mutation: MutationRecord): void => {\n    if (!modalRemoved && mutation.type === 'childList') {\n      mutation.addedNodes.forEach(item => {\n        const element = item as Element;\n        if (element.id === 'modal-portal-regiwall') {\n          element.remove();\n          modalRemoved = true;\n        }\n      });\n    }\n  };\n\n  const removeScrollLock = (mutation: MutationRecord): void => {\n    if (!overflowFixed && mutation.type === 'attributes' && mutation.attributeName === 'class') {\n      const element = mutation.target as Element;\n      if (element.tagName === 'BODY') {\n        element.className = '';\n        overflowFixed = true;\n      }\n    }\n  };\n\n  export const startObserver = (): void => {\n    const callback: MutationCallback = (mutationsList, observer) => {\n      mutationsList.forEach(mutation => {\n        removePaywallModal(mutation);\n        removeScrollLock(mutation);\n        // if we've fixed the issues, stop observing\n        if (modalRemoved && overflowFixed) {\n          observer.disconnect();\n        }\n      });\n    };\n\n    // Create an observer instance linked to the callback function and start observing the target node for configured mutations\n    if (elementToObserve) {\n      new MutationObserver(callback).observe(elementToObserve, config);\n    }\n  };\n}\nWirecutterAntiModal.startObserver();\n"],
  "mappings": ";;;;AAAA,MAAU;AAAV,IAAUA,yBAAV;AAEE,QAAI,eAAe;AACnB,QAAI,gBAAgB;AAEpB,UAAM,SAA+B;AAAA,MACnC,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,SAAS;AAAA,IACX;AAEA,UAAM,mBAAmB,SAAS,cAA+B,MAAM;AAEvE,UAAM,qBAAqB,CAAC,aAAmC;AAC7D,UAAI,CAAC,gBAAgB,SAAS,SAAS,aAAa;AAClD,iBAAS,WAAW,QAAQ,UAAQ;AAClC,gBAAM,UAAU;AAChB,cAAI,QAAQ,OAAO,yBAAyB;AAC1C,oBAAQ,OAAO;AACf,2BAAe;AAAA,UACjB;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAEA,UAAM,mBAAmB,CAAC,aAAmC;AAC3D,UAAI,CAAC,iBAAiB,SAAS,SAAS,gBAAgB,SAAS,kBAAkB,SAAS;AAC1F,cAAM,UAAU,SAAS;AACzB,YAAI,QAAQ,YAAY,QAAQ;AAC9B,kBAAQ,YAAY;AACpB,0BAAgB;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAEO,IAAMA,qBAAA,gBAAgB,MAAY;AACvC,YAAM,WAA6B,CAAC,eAAe,aAAa;AAC9D,sBAAc,QAAQ,cAAY;AAChC,6BAAmB,QAAQ;AAC3B,2BAAiB,QAAQ;AAEzB,cAAI,gBAAgB,eAAe;AACjC,qBAAS,WAAW;AAAA,UACtB;AAAA,QACF,CAAC;AAAA,MACH;AAGA,UAAI,kBAAkB;AACpB,YAAI,iBAAiB,QAAQ,EAAE,QAAQ,kBAAkB,MAAM;AAAA,MACjE;AAAA,IACF;AAAA,KAnDQ;AAqDV,sBAAoB,cAAc;",
  "names": ["WirecutterAntiModal"]
}
