{
  "version": 3,
  "sources": ["../../src/main/amazon-goodreads-meta/amazon-goodreads-meta.user.ts"],
  "sourcesContent": ["namespace AmazonGoodreadsMeta {\n  const asinRegex = /\\/([A-Z0-9]{10})/;\n\n  const findASIN = (): string[] => {\n    const asinArray = [];\n    const array = asinRegex.exec(document.location.pathname);\n    const asin = array && array.length > 1 ? array[1] : '';\n    // eslint-disable-next-line no-console\n    console.log(`ASIN in pathname: ${asin}`);\n    // determine if book\n    const dp = document.getElementById('dp');\n    if (dp?.className.includes('book')) {\n      asinArray.push(asin);\n    } else {\n      // see if we are on a page with multiple books\n      const images = document.getElementsByTagName('img');\n\n      const coverImages = Array.from(images).filter(item => item.classList.contains('cover-image'));\n      coverImages.forEach(image => {\n        const parentElem = image.parentElement;\n        if (parentElem instanceof HTMLAnchorElement) {\n          const link = parentElem.href;\n          const ciArray = asinRegex.exec(link);\n          const ciAsin = ciArray && ciArray.length > 1 ? ciArray[1] : '';\n          // eslint-disable-next-line no-console\n          console.log(`ASIN on book image: ${ciAsin}`);\n          asinArray.push(ciAsin);\n        }\n      });\n    }\n\n    return asinArray;\n  };\n\n  const findInsertPoint = (): Element[] => {\n    // on book page\n    const insertPoint: Element[] = [];\n    const reviewElement = document.getElementById('averageCustomerReviews');\n    if (reviewElement) {\n      insertPoint.push(reviewElement);\n    } else {\n      // check for SHOP NOW button with review stars above. Return array\n      const reviewArray = document.getElementsByClassName('pf-image-w');\n      insertPoint.push(...Array.from(reviewArray));\n    }\n    return insertPoint;\n  };\n\n  const insertElement = (isbn: string, insertPoint: Element): void => {\n    GM.xmlHttpRequest({\n      method: 'GET',\n      url: `https://www.goodreads.com/book/isbn/${isbn}`,\n      onload(response) {\n        const node = new DOMParser().parseFromString(response.responseText, 'text/html');\n        // get styles we need\n        const head = document.getElementsByTagName('head')[0];\n        const styles = Array.from(node.getElementsByTagName('link')).filter(item => item.rel === 'stylesheet');\n        styles.forEach(item => {\n          // add goodreads to links\n          item.href = item.href.replace('amazon', 'goodreads');\n          head.appendChild(item);\n        });\n        const meta = node.getElementById('ReviewsSection');\n        if (meta) {\n          // find our div\n          const rating = meta.querySelector('div.RatingStatistics');\n          if (rating) {\n            // replace links\n            Array.from(rating.getElementsByTagName('a')).forEach(item => {\n              item.href = response.finalUrl + item.href.replace(item.baseURI, '');\n              return item;\n            });\n            // replace styles\n            Array.from(rating.getElementsByTagName('span')).forEach(item => {\n              item.classList.replace('RatingStar--medium', 'RatingStar--small');\n              item.classList.replace('RatingStars__medium', 'RatingStars__small');\n            });\n            Array.from(rating.getElementsByTagName('div'))\n              .filter(item => item.classList.contains('RatingStatistics__rating'))\n              .forEach(item => {\n                item.style.marginBottom = '-0.8rem';\n                item.style.fontSize = '2.2rem';\n              });\n            // create label div\n            const labelCol = document.createElement('div');\n            labelCol.classList.add('a-column', 'a-span12', 'a-spacing-top-small');\n            const labelRow = document.createElement('div');\n            labelRow.classList.add('a-row', 'a-spacing-small');\n            labelRow.textContent = 'Goodreads';\n            const lineBreak = document.createElement('br');\n            labelCol.appendChild(labelRow);\n            labelRow.appendChild(lineBreak);\n            labelRow.appendChild(rating);\n            insertPoint.appendChild(labelCol);\n          }\n        }\n      },\n    });\n  };\n\n  export const main = (): void => {\n    const ASIN = findASIN();\n    const insertPoint = findInsertPoint();\n    for (let i = 0; i < ASIN.length && i < insertPoint.length; i++) {\n      const insertPointElement = insertPoint[i].parentElement;\n      if (insertPointElement) {\n        insertElement(ASIN[i], insertPointElement);\n      }\n    }\n  };\n}\nAmazonGoodreadsMeta.main();\n"],
  "mappings": "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",
  "names": ["AmazonGoodreadsMeta"]
}
